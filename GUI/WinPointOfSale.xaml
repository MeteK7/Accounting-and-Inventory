<Window x:Class="GUI.WinPointOfSale"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GUI"
        mc:Ignorable="d" Height="875.8" Width="1373.107" WindowStyle="None" ResizeMode="NoResize" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <!--Add images for button mouse over event.-->
        <ImageBrush x:Key="ButtonClose" ImageSource="/Images/Icons/close.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonWindowState" ImageSource="/Images/Buttons/btn-window-state.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonProductAdd" ImageSource="/Images/Buttons/add-product.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonProductClear" ImageSource="/Images/Buttons/clear-product.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonNew" ImageSource="/Images/Buttons/add-to-cart.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonSave" ImageSource="/Images/Buttons/floppy-disk.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonCancel" ImageSource="/Images/Buttons/cancel.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonEdit" ImageSource="/Images/Buttons/edit.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonDelete" ImageSource="/Images/Buttons/trash_red.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonPrint" ImageSource="/Images/Buttons/printer.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonPrev" ImageSource="/Images/Buttons/back.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonNext" ImageSource="/Images/Buttons/next.png" Stretch="Uniform"></ImageBrush>

        <Style TargetType="Button" x:Key="ButtonCloseStyle">
            <Setter Property="Background" Value="{StaticResource ButtonClose}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonStateStyle">
            <Setter Property="Background" Value="{StaticResource ButtonWindowState}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonProductAddStyle">
            <Setter Property="Background" Value="{StaticResource ButtonProductAdd}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonProductClearStyle">
            <Setter Property="Background" Value="{StaticResource ButtonProductClear}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonNewStyle">
            <Setter Property="Background" Value="{StaticResource ButtonNew}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonSaveStyle">
            <Setter Property="Background" Value="{StaticResource ButtonSave}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonPrintStyle">
            <Setter Property="Background" Value="{StaticResource ButtonPrint}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonCancelStyle">
            <Setter Property="Background" Value="{StaticResource ButtonCancel}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonEditStyle">
            <Setter Property="Background" Value="{StaticResource ButtonEdit}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonDeleteStyle">
            <Setter Property="Background" Value="{StaticResource ButtonDelete}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonPrevStyle">
            <Setter Property="Background" Value="{StaticResource ButtonPrev}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonNextStyle">
            <Setter Property="Background" Value="{StaticResource ButtonNext}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Background>
        <ImageBrush ImageSource="/Images/Backgrounds/rm218batch4-ning-34.jpg"/>
    </Window.Background>
    <Grid>
        <DockPanel x:Name="dpTop" Height="29" LastChildFill="False" Background="#FF3867D6" VerticalAlignment="Top" Margin="0,0,-0.2,0">
            <Grid Width="1371">
                <Label x:Name="lblTop" Content="POINT OF SALE" Height="28.8" HorizontalAlignment="Center" VerticalAlignment="Center" DockPanel.Dock="Top" Foreground="White"/>
                <Button Style="{StaticResource ButtonCloseStyle}" x:Name="btnClose" Content="" Height="29" Width="30" HorizontalAlignment="Right" Click="btnClose_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Icons/close.png"/>
                    </Button.Background>
                </Button>
                <Button x:Name="btnState" Style="{StaticResource ButtonStateStyle}" Content="" Height="29" Width="29" Click="btnState_Click" HorizontalAlignment="Right" Margin="0,0,34,0">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/btn-window-state.png"/>
                    </Button.Background>
                </Button>
            </Grid>
        </DockPanel>
        <GroupBox Header="PRODUCT" Margin="10,152,250,0" Padding="0" VerticalAlignment="Top" Height="116">
            <Grid Margin="10,0,-2,0">
                <Label x:Name="lblProductBarcode" Content="Id / Barcode" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="90"/>
                <Label x:Name="lblProductName" Content="Name" HorizontalAlignment="Left" Margin="107,10,0,0" VerticalAlignment="Top" Width="237"/>
                <Label x:Name="lblProductUnit" Content="Unit" HorizontalAlignment="Left" Margin="349,10,0,0" VerticalAlignment="Top" Width="55"/>
                <Label x:Name="lblProductSalePrice" Content="Sale Price" HorizontalAlignment="Left" Margin="484,10,0,0" VerticalAlignment="Top" Width="70" RenderTransformOrigin="0,0.458"/>
                <Label x:Name="lblProductQuantity" Content="Quantity" HorizontalAlignment="Left" Margin="559,10,0,0" VerticalAlignment="Top" Width="70"/>
                <Label x:Name="lblProductTotalPrice" Content="Total" HorizontalAlignment="Left" Margin="634,10,0,0" VerticalAlignment="Top" Width="70"/>
                <TextBox x:Name="txtProductId" HorizontalAlignment="Left" Height="40" Margin="10,40,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="90" KeyUp="txtProductId_KeyUp" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                <TextBox x:Name="txtProductName" HorizontalAlignment="Left" Height="40" Margin="107,40,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="237" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                <ComboBox x:Name="cboProductUnit" HorizontalAlignment="Left" Height="40" Margin="349,41,0,0" VerticalAlignment="Top" Width="55" SelectionChanged="cboProductUnit_SelectionChanged" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                <TextBox x:Name="txtProductSalePrice" HorizontalAlignment="Left" Height="40" Margin="484,41,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="70" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                <TextBox x:Name="txtProductQuantity" HorizontalAlignment="Left" Height="40" Margin="559,40,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="70" TextChanged="txtProductQuantity_TextChanged" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                <TextBox x:Name="txtProductTotalSalePrice" HorizontalAlignment="Left" Height="40" Margin="634,40,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="137" Foreground="Red" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" IsReadOnly="True"/>
                <Button Style="{StaticResource ButtonProductAddStyle}" x:Name="btnProductAdd" Content="" HorizontalAlignment="Left" Margin="786,40,0,0" VerticalAlignment="Top" Width="40" Height="40" BorderBrush="White" Click="btnProductAdd_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/add-product.png" Stretch="Uniform"/>
                    </Button.Background>
                </Button>
                <Button Style="{StaticResource ButtonProductClearStyle}" x:Name="btnProductClear" Content="" HorizontalAlignment="Left" Margin="831,40,0,0" VerticalAlignment="Top" Width="40" Height="40" BorderBrush="White" Click="btnProductClear_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/clear-product.png" Stretch="Uniform"/>
                    </Button.Background>
                </Button>
            </Grid>
        </GroupBox>
        <GroupBox Header="ENTERED PRODUCTS" Margin="10,273,250,10">
            <Grid Margin="10,0,-2,0">
                <DataGrid x:Name="dgProducts" IsReadOnly="True" SelectionChanged="dgProducts_SelectionChanged" Margin="5,10,5,10">
                    <DataGrid.Background>
                        <SolidColorBrush Color="#FFF0F0F0" Opacity="0.7"/>
                    </DataGrid.Background>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="Id" Width="50">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox x:Name="dgTxtProductId" Text="{Binding Id, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Name" Width="455">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox x:Name="dgTxtProductName" Text="{Binding Name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Unit" Width="60">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ComboBox x:Name="dgTxtProductUnit" ItemsSource="{Binding UnitCboItemsSource}"
                                              DisplayMemberPath="{Binding UnitCboDMemberPath}"
                                              SelectedValuePath="{Binding UnitCboSValuePath}"
                                              SelectedValue="{Binding UnitCboSValue, Mode=OneWay}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Sale Price" Width="60">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox x:Name="dgTxtProductSalePrice" Text="{Binding SalePrice, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" KeyUp="dgTxtProductSalePrice_KeyUp" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Quantity" Width="60">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox x:Name="dgTxtProductQuantity" Text="{Binding Quantity, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" KeyUp="dgTxtProductQuantity_KeyUp" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Total Sale Price" Width="100">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox x:Name="dgTxtProductTotalSalePrice" Text="{Binding TotalSalePrice, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Delete">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Name="btnDeleteDataGridRow" Content="Delete" Click="btnDeleteDataGridRow_Click"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </GroupBox>
        <GroupBox Header="Invoice Number" Height="118" Margin="0,34,10,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="235">
            <Label x:Name="lblInvoiceId" Content="WELCOME" Margin="10,10,0,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Foreground="#FF0A8105" FontSize="36" FontFamily="Alef"/>
        </GroupBox>
        <GroupBox Header="User Informations" Height="116" Margin="0,152,10,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="235">
            <Grid Margin="0,-3,-1.8,-4.4">
                <Label x:Name="lblUserPosition" Content="Position" Margin="10,21,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="75"/>
                <Label x:Name="lblUsername" Content="Username" Margin="10,57,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="75"/>
                <TextBox x:Name="txtUserType" HorizontalAlignment="Left" Height="26" Margin="90,21,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="125" IsReadOnly="True"/>
                <TextBox x:Name="txtUsername" HorizontalAlignment="Left" Height="26" Margin="90,57,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="125" IsReadOnly="True"/>
            </Grid>
        </GroupBox>
        <GroupBox Header="Basket Informations" Height="297" Margin="0,0,10,10" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="235">
            <Grid Margin="0,0,-2,0" Height="263">
                <Label x:Name="lblBasketQuantity" Content="Quantity" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,4,0,0" Width="80" VerticalContentAlignment="Center"/>
                <Label x:Name="lblBasketGrossAmount" Content="Gross Amount" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,95,0,0" Width="80" VerticalContentAlignment="Center"/>
                <Label x:Name="lblBasketDiscount" Content="Discount" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,126,0,0" Width="80" VerticalContentAlignment="Center"/>
                <Label x:Name="lblBasketSubTotal" Content="Sub Total" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,157,0,0" Width="80" VerticalContentAlignment="Center"/>
                <Label x:Name="lblBasketVat" Content="V.A.T." HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,187,0,0" Width="80" VerticalContentAlignment="Center"/>
                <Label x:Name="lblBasketGrandTotal" Content="TOTAL" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,218,0,0" Width="80" Foreground="#FFE61818" FontSize="14" Height="35" FontFamily="DejaVu Serif" FontWeight="SemiBold" VerticalContentAlignment="Center"/>
                <TextBox x:Name="txtBasketQuantity" HorizontalAlignment="Left" Height="25.6" Margin="95,4,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Text="0" IsReadOnly="True" VerticalContentAlignment="Center"/>
                <TextBox x:Name="txtBasketGrossAmount" HorizontalAlignment="Left" Height="26" Margin="95,95,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Text="0" IsReadOnly="True" VerticalContentAlignment="Center"/>
                <TextBox x:Name="txtBasketDiscount" HorizontalAlignment="Left" Height="26" Margin="95,126,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Text="0" KeyUp="txtBasketDiscount_KeyUp" VerticalContentAlignment="Center"/>
                <TextBox x:Name="txtBasketSubTotal" HorizontalAlignment="Left" Height="26" Margin="95,157,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Text="0" IsReadOnly="True" VerticalContentAlignment="Center"/>
                <TextBox x:Name="txtBasketVat" HorizontalAlignment="Left" Height="26" Margin="95,187,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Text="0" KeyUp="txtBasketVat_KeyUp" VerticalContentAlignment="Center"/>
                <TextBox x:Name="txtBasketGrandTotal" HorizontalAlignment="Left" Height="35" Margin="95,218,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Text="0" Foreground="Red" FontSize="30" FontFamily="SimSun" IsReadOnly="True" VerticalContentAlignment="Center"/>
            </Grid>
        </GroupBox>
        <GroupBox Header="Menu" Height="118" Margin="9,34,250,0" VerticalAlignment="Top">
            <Grid x:Name="___No_Name_" Margin="0,0,-1.8,-4">
                <Button Style="{StaticResource ButtonNewStyle}" x:Name="btnNew" Content="NEW" HorizontalAlignment="Left" Margin="6,10,0,0" VerticalAlignment="Top" Width="105" Height="81" Click="btnNew_Click" VerticalContentAlignment="Bottom">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/add-to-cart.png" Stretch="Uniform">
                            <ImageBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.3" CenterX="0.5" ScaleX="0.75" ScaleY="0.75"/>
                                    <SkewTransform CenterY="0.3" CenterX="0.5"/>
                                    <RotateTransform CenterY="0.3" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ImageBrush.RelativeTransform>
                        </ImageBrush>
                    </Button.Background>
                </Button>
                <Button Style="{StaticResource ButtonSaveStyle}" x:Name="btnSave" Content="SAVE" HorizontalAlignment="Left" Margin="117,10,0,0" VerticalAlignment="Top" Width="105" Height="81" Click="btnSave_Click" VerticalContentAlignment="Bottom">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/floppy-disk.png" Stretch="Uniform">
                            <ImageBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.45" CenterX="0.5" ScaleX="0.55" ScaleY="0.6"/>
                                    <SkewTransform CenterY="0.45" CenterX="0.5"/>
                                    <RotateTransform CenterY="0.45" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ImageBrush.RelativeTransform>
                        </ImageBrush>
                    </Button.Background>
                </Button>
                <Button Style="{StaticResource ButtonCancelStyle}" x:Name="btnCancel" Content="CANCEL" HorizontalAlignment="Left" Margin="228,10,0,0" VerticalAlignment="Top" Width="105" Height="81" Click="btnCancel_Click" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/cancel.png" Stretch="Uniform">
                            <ImageBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.45" CenterX="0.5" ScaleX="0.65" ScaleY="0.65"/>
                                    <SkewTransform CenterY="0.45" CenterX="0.5"/>
                                    <RotateTransform CenterY="0.45" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ImageBrush.RelativeTransform>
                        </ImageBrush>
                    </Button.Background>
                </Button>
                <Button Style="{StaticResource ButtonEditStyle}" x:Name="btnEditRecord" Content="EDIT" HorizontalAlignment="Left" Margin="339,10,0,0" VerticalAlignment="Top" Width="105" Height="81" Click="btnEditRecord_Click" VerticalContentAlignment="Bottom">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/edit.png" Stretch="Uniform">
                            <ImageBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleX="0.55" ScaleY="0.6"/>
                                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                    <RotateTransform CenterY="0.5" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ImageBrush.RelativeTransform>
                        </ImageBrush>
                    </Button.Background>
                </Button>
                <Button Style="{StaticResource ButtonDeleteStyle}" x:Name="btnDeleteRecord" Content="DELETE" HorizontalAlignment="Left" Margin="450,10,0,0" VerticalAlignment="Top" Width="105" Height="81" Click="btnDeleteRecord_Click" RenderTransformOrigin="0.581,0.494" VerticalContentAlignment="Bottom">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/trash_red.png" Stretch="Uniform">
                            <ImageBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.45" CenterX="0.5" ScaleX="0.65" ScaleY="0.65"/>
                                    <SkewTransform CenterY="0.45" CenterX="0.5"/>
                                    <RotateTransform CenterY="0.45" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ImageBrush.RelativeTransform>
                        </ImageBrush>
                    </Button.Background>
                </Button>
                <Button Style="{StaticResource ButtonPrintStyle}" x:Name="btnPrint" Content="PRINT" HorizontalAlignment="Left" Margin="561,10,0,0" VerticalAlignment="Top" Width="105" Height="81" RenderTransformOrigin="1.824,0.147" VerticalContentAlignment="Bottom">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/printer.png" Stretch="Uniform">
                            <ImageBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.45" CenterX="0.5" ScaleX="0.75" ScaleY="0.75"/>
                                    <SkewTransform CenterY="0.45" CenterX="0.5"/>
                                    <RotateTransform CenterY="0.45" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ImageBrush.RelativeTransform>
                        </ImageBrush>
                    </Button.Background>
                </Button>
                <Button Style="{StaticResource ButtonPrevStyle}" x:Name="btnPrev" Content="" HorizontalAlignment="Right" Margin="0,10,90,0" VerticalAlignment="Top" Width="75" Height="36" Click="btnPrev_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/back.png" Stretch="Uniform"/>
                    </Button.Background>
                </Button>
                <Button Style="{StaticResource ButtonNextStyle}" x:Name="btnNext" Content="" HorizontalAlignment="Right" Margin="0,10,10,0" VerticalAlignment="Top" Width="75" Height="36" Click="btnNext_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/next.png" Stretch="Uniform"/>
                    </Button.Background>
                </Button>
                <Label x:Name="lblMenuPaymentType" Content="Payment Type" HorizontalAlignment="Left" Margin="671,10,0,0" VerticalAlignment="Top" Width="101" Height="25" FontSize="11"/>
                <ComboBox x:Name="cboMenuPaymentType" HorizontalAlignment="Left" Margin="777,10,0,0" VerticalAlignment="Top" Width="120" Height="25"/>
                <Label x:Name="lblMenuCustomerId" Content="Customer" HorizontalAlignment="Left" Margin="671,40,0,0" VerticalAlignment="Top" Width="101" FontSize="11" Height="25"/>
                <ComboBox x:Name="cboMenuCustomer" HorizontalAlignment="Left" Margin="777,40,0,0" VerticalAlignment="Top" Width="120" Height="25" SelectionChanged="cboMenuCustomer_SelectionChanged"/>
                <Label x:Name="lblMenuAsset" Content="Asset" HorizontalAlignment="Left" Margin="671,70,0,0" VerticalAlignment="Top" Width="51" FontSize="11" Height="25"/>
                <RadioButton x:Name="rbAccount" Content="Account" HorizontalAlignment="Left" Margin="722,67,0,0" VerticalAlignment="Top" Width="50" Checked="rbAccount_Checked"/>
                <RadioButton x:Name="rbBank" Content="Bank" HorizontalAlignment="Left" Margin="722,80,0,0" VerticalAlignment="Top" Width="50" Checked="rbBank_Checked"/>
                <ComboBox x:Name="cboMenuAsset" HorizontalAlignment="Left" Margin="777,70,0,0" VerticalAlignment="Top" Width="120" Height="25" SelectionChanged="cboMenuAsset_SelectionChanged"/>
                <Label x:Name="lblAssetCustomerId" Content="" HorizontalAlignment="Left" Margin="902,40,0,0" VerticalAlignment="Top" Height="25" Width="23"/>
                <Label x:Name="lblAssetId" Content="" HorizontalAlignment="Left" Margin="902,70,0,0" VerticalAlignment="Top" Height="25" Width="23"/>
            </Grid>
        </GroupBox>
        <Label x:Name="lblDateAdded" Content="DATE" HorizontalAlignment="Left" Margin="1128,303,0,0" VerticalAlignment="Top" Width="235" Height="43" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Background="#00000000" Foreground="#FFC12626" FontFamily="Broadway Copyist Text Ext" FontSize="20" />

    </Grid>
</Window>
