<Window x:Class="GUI.WinInventoryAdjustment"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GUI"
        mc:Ignorable="d"
        Height="875.8" Width="1373.107" WindowStyle="None" ResizeMode="NoResize" WindowStartupLocation="CenterScreen"
        xmlns:language="clr-namespace:GUI.Properties.Languages">
    <Window.Resources>
        <!--Add images for button mouse over event.-->
        <ImageBrush x:Key="ButtonClose" ImageSource="/Images/Icons/close.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonProductAdd" ImageSource="/Images/Buttons/add-product.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonProductClear" ImageSource="/Images/Buttons/clear-product.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonNew" ImageSource="/Images/Buttons/add-to-cart.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonSave" ImageSource="/Images/Buttons/floppy-disk.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonCancel" ImageSource="/Images/Buttons/cancel.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonEdit" ImageSource="/Images/Buttons/edit.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonDelete" ImageSource="/Images/Buttons/trash_red.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonPrint" ImageSource="/Images/Buttons/printer.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonPrev" ImageSource="/Images/Buttons/back.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonNext" ImageSource="/Images/Buttons/next.png" Stretch="Uniform"></ImageBrush>

        <Style TargetType="Button" x:Key="ButtonCloseStyle">
            <Setter Property="Background" Value="{StaticResource ButtonClose}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonProductAddStyle">
            <Setter Property="Background" Value="{StaticResource ButtonProductAdd}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonProductClearStyle">
            <Setter Property="Background" Value="{StaticResource ButtonProductClear}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonNewStyle">
            <Setter Property="Background" Value="{StaticResource ButtonNew}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonSaveStyle">
            <Setter Property="Background" Value="{StaticResource ButtonSave}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonPrintStyle">
            <Setter Property="Background" Value="{StaticResource ButtonPrint}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonCancelStyle">
            <Setter Property="Background" Value="{StaticResource ButtonCancel}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonEditStyle">
            <Setter Property="Background" Value="{StaticResource ButtonEdit}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonDeleteStyle">
            <Setter Property="Background" Value="{StaticResource ButtonDelete}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonPrevStyle">
            <Setter Property="Background" Value="{StaticResource ButtonPrev}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonNextStyle">
            <Setter Property="Background" Value="{StaticResource ButtonNext}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.Background>
            <ImageBrush ImageSource="/Images/Backgrounds/stylish-soft-blue-curve-lines-abstract-background.jpg"/>
        </Grid.Background>
        <DockPanel x:Name="dpTop" Height="29" LastChildFill="False" Background="#FF3867D6" VerticalAlignment="Top" Margin="0,0,-0.2,0">
            <Label x:Name="lblTop" Content="{x:Static language:Lng.inventoryAdjustment}" Height="28.8" HorizontalAlignment="Center" VerticalAlignment="Center" DockPanel.Dock="Top" Foreground="White"/>
            <Button Style="{StaticResource ButtonCloseStyle}" x:Name="btnClose" Content="" Margin="0,-28.8,0,-0.2" Height="29" Width="32" DockPanel.Dock="Top" HorizontalAlignment="Right" Click="btnClose_Click">
                <Button.BorderBrush>
                    <SolidColorBrush Color="#FF707070" Opacity="0"/>
                </Button.BorderBrush>
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="-0.117"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
                <Button.Background>
                    <ImageBrush ImageSource="/Images/Icons/close.png"/>
                </Button.Background>
            </Button>
        </DockPanel>
        <GroupBox Header="PRODUCT" Margin="10,152,214,616" Padding="0">
            <Grid Margin="10,0,-2,3">
                <Label x:Name="lblProductBarcode" Content="Id / Barcode" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="90"/>
                <Label x:Name="lblProductName" Content="Name" HorizontalAlignment="Left" Margin="107,10,0,0" VerticalAlignment="Top" Width="237"/>
                <Label x:Name="lblProductUnit" Content="Unit" HorizontalAlignment="Left" Margin="349,10,0,0" VerticalAlignment="Top" Width="55"/>
                <Label x:Name="lblProductCostPrice" Content="Cost Price" HorizontalAlignment="Left" Margin="409,10,0,0" VerticalAlignment="Top" Width="70" RenderTransformOrigin="0,0.458"/>
                <Label x:Name="lblProductSalePrice" Content="Price Price" HorizontalAlignment="Left" Margin="484,10,0,0" VerticalAlignment="Top" Width="70" RenderTransformOrigin="0,0.458"/>
                <Label x:Name="lblProductQuantity" Content="Quantity" HorizontalAlignment="Left" Margin="559,10,0,0" VerticalAlignment="Top" Width="70"/>
                <Label x:Name="lblProductQuantityInStock" Content="Quantity in Stock" HorizontalAlignment="Left" Margin="634,10,0,0" VerticalAlignment="Top" Width="97" RenderTransformOrigin="-0.124,0.489"/>
                <Label x:Name="lblProductQuantityDifference" Content="Quantity Difference" HorizontalAlignment="Left" Margin="736,10,0,0" VerticalAlignment="Top" Width="111"/>
                <Label x:Name="lblProductTotalCostPrice" Content="Total Cost Price" HorizontalAlignment="Left" Margin="852,10,0,0" VerticalAlignment="Top" Width="130"/>
                <TextBox x:Name="txtProductId" HorizontalAlignment="Left" Height="23" Margin="10,40,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="90" KeyUp="txtProductId_KeyUp"/>
                <TextBox x:Name="txtProductName" HorizontalAlignment="Left" Height="23" Margin="107,40,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="237"/>
                <TextBox x:Name="txtProductUnit" HorizontalAlignment="Left" Height="23" Margin="349,40,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="55" IsReadOnly="True"/>
                <TextBox x:Name="txtProductCostPrice" HorizontalAlignment="Left" Height="23" Margin="409,40,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="70" IsReadOnly="True"/>
                <TextBox x:Name="txtProductSalePrice" HorizontalAlignment="Left" Height="23" Margin="484,40,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="70" IsReadOnly="True"/>
                <TextBox x:Name="txtProductQuantityInReal" HorizontalAlignment="Left" Height="23" Margin="559,40,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="70" TextChanged="txtProductQuantityInReal_TextChanged"/>
                <TextBox x:Name="txtProductQuantityInStock" HorizontalAlignment="Left" Height="23" Margin="634,40,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="97" IsReadOnly="True"/>
                <TextBox x:Name="txtProductQuantityDifference" HorizontalAlignment="Left" Height="23" Margin="736,40,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="111" IsReadOnly="True"/>
                <TextBox x:Name="txtProductTotalCostPrice" HorizontalAlignment="Left" Height="23" Margin="852,40,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="130" Foreground="Red" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" IsReadOnly="True"/>
                <Button Style="{StaticResource ButtonProductAddStyle}" x:Name="btnProductAdd" Content="" HorizontalAlignment="Left" Margin="991,41,0,0" VerticalAlignment="Top" Width="22" Height="22" BorderBrush="White" Click="btnProductAdd_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/add-product.png" Stretch="Uniform"/>
                    </Button.Background>
                </Button>
                <Button Style="{StaticResource ButtonProductClearStyle}" x:Name="btnProductClear" Content="" HorizontalAlignment="Left" Margin="1019,41,0,0" VerticalAlignment="Top" Width="22" Height="22" BorderBrush="White">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/clear-product.png" Stretch="Uniform"/>
                    </Button.Background>
                </Button>
            </Grid>
        </GroupBox>
        <GroupBox Header="{x:Static language:Lng.enteredProducts}" Margin="10,260,214,18">
            <Grid Margin="10,0,-2,0">
                <DataGrid x:Name="dgProducts" HorizontalAlignment="Left" Height="561" VerticalAlignment="Top" Width="1119" IsReadOnly="True">
                    <DataGrid.Background>
                        <SolidColorBrush Color="#FFF0F0F0" Opacity="0.7"/>
                    </DataGrid.Background>
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Id}" ClipboardContentBinding="{x:Null}" Header="{x:Static language:Lng.barcode}" Width="150" />
                        <DataGridTextColumn Binding="{Binding Name}" ClipboardContentBinding="{x:Null}" Header="{x:Static language:Lng.name}" Width="300"/>
                        <DataGridTextColumn Binding="{Binding Unit}" ClipboardContentBinding="{x:Null}" Header="{x:Static language:Lng.unit}" Width="35"/>
                        <DataGridTextColumn Binding="{Binding CostPrice}" ClipboardContentBinding="{x:Null}" Header="{x:Static language:Lng.costPrice}" Width="65"/>
                        <DataGridTextColumn Binding="{Binding SalePrice}" ClipboardContentBinding="{x:Null}" Header="{x:Static language:Lng.salePrice}" Width="65"/>
                        <DataGridTextColumn Binding="{Binding QuantityInReal}" ClipboardContentBinding="{x:Null}" Header="{x:Static language:Lng.quantityInReal}"/>
                        <DataGridTextColumn Binding="{Binding QuantityInStock}" ClipboardContentBinding="{x:Null}" Header="{x:Static language:Lng.quantityInStock}"/>
                        <DataGridTextColumn Binding="{Binding QuantityDifference}" ClipboardContentBinding="{x:Null}" Header="{x:Static language:Lng.quantityDifference}"/>
                        <DataGridTextColumn Binding="{Binding TotalCostPrice}" ClipboardContentBinding="{x:Null}" Header="{x:Static language:Lng.totalCostPrice}"/>
                        <DataGridTextColumn Binding="{Binding TotalSalePrice}" ClipboardContentBinding="{x:Null}" Header="{x:Static language:Lng.totalSalePrice}" Width="85"/>
                        <DataGridTemplateColumn Header="{x:Static language:Lng.delete}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Name="btnDeleteDataGridRow" Content="{x:Static language:Lng.delete}" Click="BtnDeleteDataGridRow_Click"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </GroupBox>
        <GroupBox Header="{x:Static language:Lng.inventoryAdjustmentId}" Height="118" Margin="0,34,10,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="199">
            <Label x:Name="lblIventoryAdjustmentId" Content="WELCOME" Margin="10,10,0,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Foreground="#FF0A8105" FontSize="36" FontFamily="Alef"/>
        </GroupBox>
        <GroupBox Header="{x:Static language:Lng.userInformations}" Height="108" Margin="0,152,10,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="199">
            <Grid Margin="10,0,-2,0">
                <Label x:Name="lblUserPosition" Content="{x:Static language:Lng.position}" Margin="10,21,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="65"/>
                <Label x:Name="lblUsername" Content="{x:Static language:Lng.username}" Margin="10,52,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="65"/>
                <TextBox x:Name="txtUserType" HorizontalAlignment="Left" Height="26" Margin="80,21,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="89" IsReadOnly="True"/>
                <TextBox x:Name="txtUsername" HorizontalAlignment="Left" Height="26" Margin="80,52,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="89" IsReadOnly="True"/>
            </Grid>
        </GroupBox>
        <GroupBox Header="{x:Static language:Lng.basketInformations}" Height="148" Margin="0,710,10,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="199">
            <Grid Margin="10,0,-2,0" Height="120">
                <Label x:Name="lblBasketTotalProducts" Content="{x:Static language:Lng.totalProducts}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,26,0,0" Width="80" HorizontalContentAlignment="Left" RenderTransformOrigin="0.099,0.656"/>
                <Label x:Name="lblBasketTotal" Content="{x:Static language:Lng.total}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,60,0,0" Width="80" Foreground="#FFE61818" FontSize="14" Height="26" FontFamily="DejaVu Serif" FontWeight="SemiBold" HorizontalContentAlignment="Left"/>
                <TextBox x:Name="txtBasketQuantity" HorizontalAlignment="Left" Height="26" Margin="95,26,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="74" Text="0" HorizontalContentAlignment="Left"/>
                <TextBox x:Name="txtBasketGrandTotal" HorizontalAlignment="Left" Height="26" Margin="95,57,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="74" Text="0" Foreground="Red" FontSize="20" FontFamily="SimSun" HorizontalContentAlignment="Left"/>
            </Grid>
        </GroupBox>
        <GroupBox Header="{x:Static language:Lng.menu}" Height="118" Margin="0,34,214,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="1141">
            <Grid x:Name="___No_Name_" Margin="0,0,-2,0" Height="94">
                <Button Style="{StaticResource ButtonNewStyle}" x:Name="btnNew" Content="{x:Static language:Lng.newRecord}" HorizontalAlignment="Left" Margin="6,10,0,0" VerticalAlignment="Top" Width="105" Height="81" VerticalContentAlignment="Bottom" Click="btnNew_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/add-to-cart.png" Stretch="Uniform">
                            <ImageBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.3" CenterX="0.5" ScaleX="0.75" ScaleY="0.75"/>
                                    <SkewTransform CenterY="0.3" CenterX="0.5"/>
                                    <RotateTransform CenterY="0.3" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ImageBrush.RelativeTransform>
                        </ImageBrush>
                    </Button.Background>
                </Button>
                <Button Style="{StaticResource ButtonSaveStyle}" x:Name="btnSave" Content="{x:Static language:Lng.save}" HorizontalAlignment="Left" Margin="117,10,0,0" VerticalAlignment="Top" Width="105" Height="81" VerticalContentAlignment="Bottom" Click="btnSave_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/floppy-disk.png" Stretch="Uniform">
                            <ImageBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.45" CenterX="0.5" ScaleX="0.55" ScaleY="0.6"/>
                                    <SkewTransform CenterY="0.45" CenterX="0.5"/>
                                    <RotateTransform CenterY="0.45" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ImageBrush.RelativeTransform>
                        </ImageBrush>
                    </Button.Background>
                </Button>
                <Button Style="{StaticResource ButtonCancelStyle}" x:Name="btnCancel" Content="{x:Static language:Lng.cancel}" HorizontalAlignment="Left" Margin="228,10,0,0" VerticalAlignment="Top" Width="105" Height="81" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom" Click="btnCancel_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/cancel.png" Stretch="Uniform">
                            <ImageBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.45" CenterX="0.5" ScaleX="0.65" ScaleY="0.65"/>
                                    <SkewTransform CenterY="0.45" CenterX="0.5"/>
                                    <RotateTransform CenterY="0.45" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ImageBrush.RelativeTransform>
                        </ImageBrush>
                    </Button.Background>
                </Button>
                <Button Style="{StaticResource ButtonEditStyle}" x:Name="btnEditRecord" Content="{x:Static language:Lng.edit}" HorizontalAlignment="Left" Margin="339,10,0,0" VerticalAlignment="Top" Width="105" Height="81" VerticalContentAlignment="Bottom">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/edit.png" Stretch="Uniform">
                            <ImageBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleX="0.55" ScaleY="0.6"/>
                                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                    <RotateTransform CenterY="0.5" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ImageBrush.RelativeTransform>
                        </ImageBrush>
                    </Button.Background>
                </Button>
                <Button Style="{StaticResource ButtonDeleteStyle}" x:Name="btnDeleteRecord" Content="{x:Static language:Lng.delete}" HorizontalAlignment="Left" Margin="450,10,0,0" VerticalAlignment="Top" Width="105" Height="81" RenderTransformOrigin="0.581,0.494" VerticalContentAlignment="Bottom" Click="BtnDeleteRecord_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/trash_red.png" Stretch="Uniform">
                            <ImageBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.45" CenterX="0.5" ScaleX="0.65" ScaleY="0.65"/>
                                    <SkewTransform CenterY="0.45" CenterX="0.5"/>
                                    <RotateTransform CenterY="0.45" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ImageBrush.RelativeTransform>
                        </ImageBrush>
                    </Button.Background>
                </Button>
                <Button Style="{StaticResource ButtonPrintStyle}" x:Name="btnPrint" Content="{x:Static language:Lng.print}" HorizontalAlignment="Left" Margin="561,10,0,0" VerticalAlignment="Top" Width="105" Height="81" RenderTransformOrigin="1.824,0.147" VerticalContentAlignment="Bottom">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/printer.png" Stretch="Uniform">
                            <ImageBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.45" CenterX="0.5" ScaleX="0.75" ScaleY="0.75"/>
                                    <SkewTransform CenterY="0.45" CenterX="0.5"/>
                                    <RotateTransform CenterY="0.45" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ImageBrush.RelativeTransform>
                        </ImageBrush>
                    </Button.Background>
                </Button>
                <Button Style="{StaticResource ButtonPrevStyle}" x:Name="btnPrev" Content="" HorizontalAlignment="Left" Margin="930,10,0,0" VerticalAlignment="Top" Width="75" Height="36" Click="btnPrev_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/back.png" Stretch="Uniform"/>
                    </Button.Background>
                </Button>
                <Button Style="{StaticResource ButtonNextStyle}" x:Name="btnNext" Content="" HorizontalAlignment="Left" Margin="1010,10,0,0" VerticalAlignment="Top" Width="75" Height="36" Click="btnNext_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/next.png" Stretch="Uniform"/>
                    </Button.Background>
                </Button>
            </Grid>
        </GroupBox>
    </Grid>
</Window>
