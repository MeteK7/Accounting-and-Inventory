<Window x:Class="GUI.WinDeposit"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GUI"
        mc:Ignorable="d"
        Title="WinDeposit" Height="742" Width="1106" WindowStyle="None" ResizeMode="NoResize" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <!--Add images for button mouse over event.-->
        <ImageBrush x:Key="ButtonClose" ImageSource="/Images/Icons/close.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonMenuNew" ImageSource="/Images/Buttons/add-file.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonMenuSave" ImageSource="/Images/Buttons/btn-save.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonMenuCancel" ImageSource="/Images/Buttons/cancellation.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonMenuEdit" ImageSource="/Images/Buttons/edit-file.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonMenuDelete" ImageSource="/Images/Buttons/file-trash.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonEntranceEnter" ImageSource="/Images/Buttons/add-product.png" Stretch="Uniform"></ImageBrush>
        <ImageBrush x:Key="ButtonEntranceClear" ImageSource="/Images/Buttons/clear-product.png" Stretch="Uniform"></ImageBrush>

        <Style TargetType="Button" x:Key="ButtonCloseStyle">
            <Setter Property="Background" Value="{StaticResource ButtonClose}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonMenuNewStyle">
            <Setter Property="Background" Value="{StaticResource ButtonMenuNew}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonMenuSaveStyle">
            <Setter Property="Background" Value="{StaticResource ButtonMenuSave}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonMenuCancelStyle">
            <Setter Property="Background" Value="{StaticResource ButtonMenuCancel}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonMenuEditStyle">
            <Setter Property="Background" Value="{StaticResource ButtonMenuEdit}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonMenuDeleteStyle">
            <Setter Property="Background" Value="{StaticResource ButtonMenuDelete}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonEntranceEnterStyle">
            <Setter Property="Background" Value="{StaticResource ButtonEntranceEnter}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonEntranceClearStyle">
            <Setter Property="Background" Value="{StaticResource ButtonEntranceClear}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" Value="Blue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Opacity" Value="0.6"/>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <DockPanel x:Name="dpTop" Height="29" LastChildFill="False" Background="#FF3867D6" VerticalAlignment="Top">
            <Label x:Name="lblTop" Content="DEPOSITS" Height="28.8" HorizontalAlignment="Center" VerticalAlignment="Center" DockPanel.Dock="Top" Foreground="White"/>
            <Button Style="{StaticResource ButtonCloseStyle}" x:Name="btnClose" Content="" Margin="0,-28.8,0,-0.2" Height="29" Width="29" DockPanel.Dock="Top" HorizontalAlignment="Right" Click="btnClose_Click">
                <Button.BorderBrush>
                    <SolidColorBrush Color="#FF707070" Opacity="0"/>
                </Button.BorderBrush>
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="-0.117"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
                <Button.Background>
                    <ImageBrush ImageSource="/Images/Icons/close.png"/>
                </Button.Background>
            </Button>
        </DockPanel>
        <GroupBox Header="Menu" Margin="10,34,219,610">
            <Grid>
                <Button Style="{StaticResource ButtonMenuNewStyle}" x:Name="btnMenuNew" Content="NEW" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" Height="61" Width="61" VerticalContentAlignment="Bottom" FontFamily="Lucida Console" Click="btnMenuNew_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/add-file.png">
                            <ImageBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.3" CenterX="0.6" ScaleX="0.65" ScaleY="0.7"/>
                                    <SkewTransform CenterY="0.3" CenterX="0.6" AngleY="0"/>
                                    <RotateTransform CenterY="0.3" CenterX="0.6"/>
                                    <TranslateTransform X="0"/>
                                </TransformGroup>
                            </ImageBrush.RelativeTransform>
                        </ImageBrush>
                    </Button.Background>
                </Button>
                <Button Style="{StaticResource ButtonMenuSaveStyle}" x:Name="btnMenuSave" Content="SAVE" HorizontalAlignment="Left" Margin="76,0,0,0" VerticalAlignment="Center" Height="61" Width="61" VerticalContentAlignment="Bottom" FontFamily="Lucida Console">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/btn-save.png">
                            <ImageBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.3" CenterX="0.5" ScaleX="0.65" ScaleY="0.7"/>
                                    <SkewTransform CenterY="0.3" CenterX="0.5"/>
                                    <RotateTransform CenterY="0.3" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ImageBrush.RelativeTransform>
                        </ImageBrush>
                    </Button.Background>
                </Button>
                <Button Style="{StaticResource ButtonMenuCancelStyle}" x:Name="btnMenuCancel" Content="CANCEL" HorizontalAlignment="Left" Margin="142,0,0,0" VerticalAlignment="Center" Height="61" Width="61" VerticalContentAlignment="Bottom" FontFamily="Lucida Console">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/cancellation.png">
                            <ImageBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.3" CenterX="0.55" ScaleX="0.75" ScaleY="0.75"/>
                                    <SkewTransform CenterY="0.3" CenterX="0.55"/>
                                    <RotateTransform CenterY="0.3" CenterX="0.55"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ImageBrush.RelativeTransform>
                        </ImageBrush>
                    </Button.Background>
                </Button>
                <Button Style="{StaticResource ButtonMenuEditStyle}" x:Name="btnMenuEdit" Content="EDIT" HorizontalAlignment="Left" Margin="208,0,0,0" VerticalAlignment="Center" Height="61" Width="61" VerticalContentAlignment="Bottom" FontFamily="Lucida Console">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/edit-file.png">
                            <ImageBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.4" CenterX="0.7" ScaleX="0.7" ScaleY="0.7"/>
                                    <SkewTransform CenterY="0.4" CenterX="0.7"/>
                                    <RotateTransform CenterY="0.4" CenterX="0.7"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ImageBrush.RelativeTransform>
                        </ImageBrush>
                    </Button.Background>
                </Button>
                <Button Style="{StaticResource ButtonMenuDeleteStyle}" x:Name="btnMenuDelete" Content="DELETE" HorizontalAlignment="Left" Margin="274,0,0,0" VerticalAlignment="Center" Height="61" Width="61" VerticalContentAlignment="Bottom" FontFamily="Lucida Console">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/file-trash.png">
                            <ImageBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.3" CenterX="0.5" ScaleX="0.7" ScaleY="0.7"/>
                                    <SkewTransform CenterY="0.3" CenterX="0.5"/>
                                    <RotateTransform CenterY="0.3" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ImageBrush.RelativeTransform>
                        </ImageBrush>
                    </Button.Background>
                </Button>
                <Label x:Name="lblMenuAccountNumber" Content="Account Number" HorizontalAlignment="Left" Margin="340,10,0,0" VerticalAlignment="Top" Width="112"/>
                <ComboBox x:Name="cboMenuAccountNumber" HorizontalAlignment="Left" Margin="457,10,0,0" VerticalAlignment="Top" Width="112" Height="29"/>
            </Grid>
        </GroupBox>
        <GroupBox Header="Entrance" Margin="10,137,219,501">
            <Grid>
                <Label x:Name="lblEntranceBankId" Content="Id" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="73"/>
                <Label x:Name="lblEntranceBankName" Content="Bank Name" HorizontalAlignment="Left" Margin="88,10,0,0" VerticalAlignment="Top" Width="112"/>
                <Label x:Name="lblEntranceDescription" Content="Description" HorizontalAlignment="Left" Margin="205,11,0,0" VerticalAlignment="Top" Width="461"/>
                <Label x:Name="lblEntranceAmount" Content="Amount" HorizontalAlignment="Left" Margin="671,10,0,0" VerticalAlignment="Top" Width="74"/>
                <TextBox x:Name="txtEntranceBankId" HorizontalAlignment="Left" Margin="10,41,0,0" Text="" TextWrapping="Wrap" VerticalAlignment="Top" Width="73" Height="30" KeyUp="txtId_KeyUp"/>
                <ComboBox x:Name="cboEntranceBankName" HorizontalAlignment="Left" Margin="88,41,0,0" VerticalAlignment="Top" Width="112" Height="30" Loaded="cboBankName_Loaded" KeyUp="cboBankName_KeyUp"/>
                <TextBox x:Name="txtEntranceDescription" HorizontalAlignment="Left" Margin="205,42,0,0" Text="" TextWrapping="Wrap" VerticalAlignment="Top" Width="461" Height="30"/>
                <TextBox x:Name="txtEntranceAmount" HorizontalAlignment="Left" Margin="671,42,0,0" Text="" TextWrapping="Wrap" VerticalAlignment="Top" Width="74" Height="30" KeyUp="txtEntranceAmount_KeyUp"/>
                <Button Style="{StaticResource ButtonEntranceEnterStyle}" x:Name="btnEntranceEnter" Content="" HorizontalAlignment="Left" Margin="750,42,0,0" VerticalAlignment="Top" Height="29" Width="29" BorderBrush="White" Click="btnEntranceEnter_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/add-product.png"/>
                    </Button.Background>
                </Button>
                <Button Style="{StaticResource ButtonEntranceClearStyle}" x:Name="btnEntranceClear" Content="" HorizontalAlignment="Left" Margin="784,42,0,0" VerticalAlignment="Top" Height="29" Width="29" BorderBrush="White">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/Buttons/clear-product.png"/>
                    </Button.Background>
                </Button>
            </Grid>
        </GroupBox>
        <GroupBox Header="Deposits" Margin="10,246,219,10">
            <DataGrid x:Name="dgDeposits">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Id}" ClipboardContentBinding="{x:Null}" Header="Id" Width="50" />
                    <DataGridTextColumn Binding="{Binding BankName}" ClipboardContentBinding="{x:Null}" Header="Bank Name" Width="190"/>
                    <DataGridTextColumn Binding="{Binding Description}" ClipboardContentBinding="{x:Null}" Header="Description" Width="430"/>
                    <DataGridTextColumn Binding="{Binding Amount}" ClipboardContentBinding="{x:Null}" Header="Amount" Width="100"/>
                    <DataGridTemplateColumn Header="Delete">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Name="btnDeleteDataGridRow" Content="Delete"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>
        <GroupBox Header="Deposit Number" Margin="892,34,10,610">
            <Grid>
                <Label x:Name="lblDepositNumber" Content="0" HorizontalAlignment="Center" VerticalAlignment="Center" Height="55" Width="172" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Foreground="Red" FontSize="36" FontFamily="Georgia"/>
            </Grid>
        </GroupBox>
        <GroupBox Header="User Informations" Margin="892,137,10,501">
            <Grid>
                <Label x:Name="lblUserPosition" Content="Position" Margin="10,10,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="63"/>
                <Label x:Name="lblUsername" Content="Username" Margin="10,41,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="63"/>
                <TextBox x:Name="txtUserType" HorizontalAlignment="Left" Height="26" Margin="78,10,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="104" IsReadOnly="True"/>
                <TextBox x:Name="txtUsername" HorizontalAlignment="Left" Height="26" Margin="78,41,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="104" IsReadOnly="True"/>
            </Grid>
        </GroupBox>
        <GroupBox Header="Summary" Margin="892,489,10,10">
            <Grid>
                <Label x:Name="lblTotal" Content="TOTAL:" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="48"/>
                <TextBox x:Name="txtTotal" HorizontalAlignment="Left" Margin="63,10,0,0" Text="0" TextWrapping="Wrap" VerticalAlignment="Top" Width="119" Height="26"/>
            </Grid>
        </GroupBox>

    </Grid>
</Window>
